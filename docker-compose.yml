version: "3.5"

services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: etcd
    command: >
      etcd
      -advertise-client-urls http://etcd:2379
      -listen-client-urls http://0.0.0.0:2379
      -listen-peer-urls http://0.0.0.0:2380
      -initial-advertise-peer-urls http://etcd:2380
      -initial-cluster etcd=http://etcd:2380
      -initial-cluster-state new
      -name etcd
    ports:
      - "2379:2379"
    networks:
      - milvus
    volumes:
      - etcd_data:/etcd

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: minio
    command: server /minio_data --console-address ":9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - milvus
    volumes:
      - minio_data:/minio_data

  milvus-standalone:
    image: milvusdb/milvus:v2.3.4
    container_name: milvus-standalone
    command: ["milvus", "run", "standalone"]
    depends_on:
      - etcd
      - minio
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    networks:
      - milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres_db:
    image: postgres:13 # Using a stable PostgreSQL version
    container_name: postgres_db
    environment:
      POSTGRES_DB: attendance_db # <--- You can change this database name
      POSTGRES_USER: attendance_user # <--- You can change this username
      POSTGRES_PASSWORD: shwetapathak # <--- IMPORTANT: CHANGE THIS TO A STRONG PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persistent data for PostgreSQL
    ports:
      - "5432:5432" # Expose Postgres port to host (optional, but useful for connecting with external tools like DBeaver)
    networks:
      - milvus # Connect to the same network as your app
    healthcheck: # Healthcheck to ensure DB is ready
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  face-recognition-app:
    build: .
    container_name: face-recognition-app
    ports:
      - "8000:8000"
    networks:
      - milvus
    volumes:
      - ./face_data:/app/face_data
      - ./model:/app/model
      - ./static:/app/static # Ensure static files are mounted
    depends_on:
      milvus-standalone:
        condition: service_healthy
      postgres_db:
        condition: service_healthy
    environment:
      MILVUS_HOST: milvus-standalone
      MILVUS_PORT: 19530
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: attendance_db
      DB_USER: attendance_user
      DB_PASSWORD: shwetapathak
    privileged: true 

volumes:
  etcd_data:
  minio_data:
  milvus_data:
  postgres_data:

networks:
  milvus:
    driver: bridge
